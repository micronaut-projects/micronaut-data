import java.time.Duration

buildscript {
    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath "io.micronaut.build.internal:micronaut-gradle-plugins:4.0.0.RC5"
    }
}

subprojects { Project subproject ->
    group "io.micronaut.data"

    boolean isExampleOrBenchmark = subproject.parent.name == "docs-examples" || subproject.name.contains("example") || subproject.name.contains("benchmark")
    ext {
        skipDocumentation = true
    }
    if (subproject.name != 'data-bom' && !isExampleOrBenchmark) {
        if (subproject.name != 'data-tck') {
            skipDocumentation = false
        }
        apply plugin: "io.micronaut.build.internal.common"
        apply plugin: "io.micronaut.build.internal.dependency-updates"
        apply plugin: "io.micronaut.build.internal.publishing"

        micronautBuild {
            resolutionStrategy {
                force "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceVersion"
                force "jakarta.transaction:jakarta.transaction-api:$jakartaTxVersion"
            }
        }

        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
            options.compilerArgs.addAll([
                    '-parameters',
                    // enables incremental compilation
                    '-Amicronaut.processing.incremental=true',
                    '-Amicronaut.processing.annotations=io.micronaut.data.*,io.micronaut.core.annotation.*,javax.persistence.*',
                    "-Amicronaut.processing.group=$project.group",
                    "-Amicronaut.processing.module=$project.name",
            ])
        }

    } else if(isExampleOrBenchmark) {
        repositories {
            jcenter()
            mavenCentral()
        }
        apply plugin:'java'

    } else {
        apply plugin: "java-platform"
        version projectVersion
        apply plugin: "io.micronaut.build.internal.dependency-updates"
        apply plugin: "io.micronaut.build.internal.publishing"

    }

    tasks.withType(Test) {
        if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_15)) {
            jvmArgs "--enable-preview"
        }
        timeout = Duration.ofMinutes(20)
    }

    if (subproject.name != 'data-bom') {
        dependencies {
            testImplementation("org.spockframework:spock-core:${spockVersion}") {
                exclude module:'groovy-all'
            }
            testImplementation "io.micronaut.test:micronaut-test-spock:$micronautTestVersion"        
        }

        tasks.withType(Test) {
            jvmArgs '-Xmx2048m'
            systemProperty "micronaut.cloud.platform", "OTHER"
            if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_15)) {
                jvmArgs "--enable-preview"
            }
            timeout = Duration.ofMinutes(20)
        }
    }
    
}

apply plugin: "io.micronaut.build.internal.docs"
apply plugin: "io.micronaut.build.internal.dependency-updates"
