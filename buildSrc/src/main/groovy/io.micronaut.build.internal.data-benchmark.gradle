plugins {
    id "io.micronaut.build.internal.data-dependencies"
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow"
    id "me.champeau.jmh"
}

version "0.1"
group "example"

dependencies {
    testImplementation libs.jupiter.api
    testRuntimeOnly libs.jupiter.engine

    jmh libs.jmh.core
    jmh libs.jmh.annprocess
}

tasks.named("test") {
    useJUnitPlatform()
}

application {
    mainClass = "example.Application"
}

tasks.named("run") {
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}

jmh {
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
}

jmhJar {
    mergeServiceFiles()
}


if (micronautBuild.environment.githubAction.get()) {
    def waitForTasks = [
            ":data-hibernate-jpa:test",
            ":data-jdbc:test",
            ":data-r2dbc:test",
            ":data-mongodb:test"
    ] as Object[]
    tasks.named("classes") {
        // Postpone examples processing
        mustRunAfter waitForTasks
    }
    tasks.named("test") {
        // Let core modules tests pass first so the test containers don't eat all the memory
        mustRunAfter waitForTasks
    }
}
