plugins {
    id "io.micronaut.build.internal.data-dependencies"
    id "io.micronaut.minimal.application"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations.configureEach {
    resolutionStrategy.preferProjectModules()
}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
}

if (micronautBuild.environment.githubAction.get()) {
    def waitForTasks = [
            ":data-hibernate-jpa:test",
            ":data-jdbc:test",
            ":data-r2dbc:test",
            ":data-mongodb:test"
    ] as Object[]
    // Let core modules tests pass first so the test containers don't eat all the memory
    tasks.named("compileJava") {
        mustRunAfter waitForTasks
    }
    tasks.named("processResources") {
        mustRunAfter waitForTasks
    }
    def compileKotlinTask = tasks.findByName("compileKotlin")
    if (compileKotlinTask) {
        compileKotlinTask.mustRunAfter waitForTasks
    }
    def internalStartTestResourcesServiceTask = tasks.findByName("internalStartTestResourcesService")
    if (internalStartTestResourcesServiceTask) {
        internalStartTestResourcesServiceTask.mustRunAfter waitForTasks
    }
    def kaptGenerateStubsKotlinTask = tasks.findByName("kaptGenerateStubsKotlin")
    if (kaptGenerateStubsKotlinTask) {
        kaptGenerateStubsKotlinTask.mustRunAfter waitForTasks
    }
    tasks.named("test") {
        mustRunAfter waitForTasks
    }
}

tasks.register("testExamples") {
    dependsOn "test"
}

dependencies {
    micronautBoms(platform("io.micronaut:micronaut-core-bom:$micronautVersion"))
    testRuntimeOnly mnSerde.micronaut.serde.jackson
    runtimeOnly mn.snakeyaml
}
