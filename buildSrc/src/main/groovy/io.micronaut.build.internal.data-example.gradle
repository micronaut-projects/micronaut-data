plugins {
    id "io.micronaut.application"
    id "io.micronaut.build.internal.quality-checks"
}

configurations.all {
    resolutionStrategy.dependencySubstitution { DependencySubstitutions subs ->
        project.rootProject.subprojects {
            if (!it.name.startsWith("data") || it.name.startsWith("data-bom")) {
                return
            }
            substitute(module("io.micronaut.data:micronaut-${it.name}")).using(subs.project(it.path))
        }
    }
}

tasks.named("test") {
    onlyIf {
        def disabled = project.path.contains("groovy") && JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_16)
        !disabled
    }

    def testExamples = project.rootProject.tasks.findByName("testExamples")
    if (!testExamples) {
        testExamples = project.rootProject.tasks.create("testExamples")
    }
    testExamples.dependsOn(it)
}

tasks.withType(JavaCompile).configureEach {
    options.fork = true
}

project.afterEvaluate {
    nativeCompile.enabled = false
    testNativeImage.enabled = false
}

tasks.register("spotlessCheck") {
    // workaround for bug in build looking for this task
}
tasks.withType(Checkstyle).configureEach {
    enabled = false
}

test {
    jacoco {
        excludes += ['example/**']
    }
}