[
  {
    "type": "io.micronaut.transaction.interceptor.CoroutineTxHelper",
    "member": "Method io.micronaut.transaction.interceptor.CoroutineTxHelper.setupCoroutineContext(io.micronaut.aop.kotlin.KotlinInterceptedMethod)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TxSynchronousContext",
    "member": "Method io.micronaut.transaction.interceptor.TxSynchronousContext.restoreThreadContext(kotlin.coroutines.CoroutineContext,io.micronaut.transaction.support.TransactionSynchronizationManager$State)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TxSynchronousContext",
    "member": "Method io.micronaut.transaction.interceptor.TxSynchronousContext.updateThreadContext(kotlin.coroutines.CoroutineContext)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TxSynchronousContext",
    "member": "Constructor io.micronaut.transaction.interceptor.TxSynchronousContext(io.micronaut.transaction.support.TransactionSynchronizationManager$State)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationManager",
    "member": "Class io.micronaut.transaction.support.TransactionSynchronizationManager",
    "reason": "Accepted changes"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationUtils",
    "member": "Method io.micronaut.transaction.support.TransactionSynchronizationUtils.triggerAfterCommit()",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationUtils",
    "member": "Method io.micronaut.transaction.support.TransactionSynchronizationUtils.triggerAfterCompletion(io.micronaut.transaction.support.TransactionSynchronization$Status)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationUtils",
    "member": "Method io.micronaut.transaction.support.TransactionSynchronizationUtils.triggerBeforeCommit(boolean)",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationUtils",
    "member": "Method io.micronaut.transaction.support.TransactionSynchronizationUtils.triggerBeforeCompletion()",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.TransactionSynchronizationUtils",
    "member": "Method io.micronaut.transaction.support.TransactionSynchronizationUtils.triggerFlush()",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.support.AbstractSynchronousTransactionManager",
    "member": "Method io.micronaut.transaction.support.AbstractSynchronousTransactionManager.getTransactionSynchronization()",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.transaction.jdbc.DataSourceTransactionManager",
    "member": "Class io.micronaut.transaction.jdbc.DataSourceTransactionManager",
    "reason": "Internal method"
  },
  {
    "type": "io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher",
    "member": "Class io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher",
    "reason": "Class is considered internal API"
  },
  {
    "type": "io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher",
    "member": "Constructor io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher(java.lang.String[])",
    "reason": "Class is considered internal API"
  },
  {
    "type": "io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
    "member": "Class io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
    "reason": "Class is considered internal API"
  },
  {
    "type": "io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
    "member": "Field PREFIXES",
    "reason": "Class is considered internal API"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Class io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Method io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference.getBeanDefinitionType()",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Method io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference.getBeanType()",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Method io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference.load()",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.serde.$DataCodecRegistry$Definition$Reference()",
    "reason": "Internal class"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.DefaultReactiveMongoRepositoryOperations",
    "member": "Method io.micronaut.data.mongodb.operations.DefaultReactiveMongoRepositoryOperations.withTransaction(io.micronaut.transaction.reactive.ReactiveTransactionStatus,io.micronaut.transaction.reactive.ReactiveTransactionOperations$TransactionalCallback)",
    "reason": "Experimental method"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations",
    "member": "Class io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations",
    "reason": "Experimental method"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations",
    "member": "Field CLIENT_SESSION_CONTEXT_KEY",
    "reason": "Experimental method"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations",
    "member": "Method io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations.withTransaction(io.micronaut.transaction.reactive.ReactiveTransactionStatus,io.micronaut.transaction.reactive.ReactiveTransactionOperations$TransactionalCallback)",
    "reason": "Experimental method"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoReactorRepositoryOperations",
    "member": "Implemented interface io.micronaut.data.mongodb.operations.MongoReactiveRepositoryOperations",
    "reason": "Experimental method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.cleanupTransactionInfo(io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.commitTransactionAfterReturning(io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.completeTransactionAfterThrowing(io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo,java.lang.Throwable)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.createTransactionIfNecessary(io.micronaut.transaction.SynchronousTransactionManager,io.micronaut.transaction.interceptor.TransactionAttribute,io.micronaut.inject.ExecutableMethod)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.prepareTransactionInfo(io.micronaut.transaction.SynchronousTransactionManager,io.micronaut.transaction.interceptor.TransactionAttribute,io.micronaut.inject.ExecutableMethod,io.micronaut.transaction.TransactionStatus)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor.resolveTransactionDefinition(io.micronaut.inject.ExecutableMethod)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor",
    "member": "Constructor io.micronaut.transaction.interceptor.TransactionalInterceptor(io.micronaut.context.BeanLocator,io.micronaut.transaction.interceptor.CoroutineTxHelper)",
    "reason": "Removed deprecated method"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Class io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.getJoinpointIdentification()",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.getTransactionManager()",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.getTransactionManager()",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.hasTransaction()",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.newTransactionStatus(io.micronaut.transaction.TransactionStatus)",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Constructor io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo(io.micronaut.transaction.SynchronousTransactionManager,io.micronaut.transaction.interceptor.TransactionAttribute,io.micronaut.inject.ExecutableMethod)",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo",
    "member": "Method io.micronaut.transaction.interceptor.TransactionalInterceptor$TransactionInfo.getTransactionStatus()",
    "reason": "Removed deprecated class"
  },
  {
    "type": "io.micronaut.transaction.TransactionDefinition",
    "member": "Class io.micronaut.transaction.TransactionDefinition",
    "reason": "Added default methods"
  },
  {
    "type": "io.micronaut.transaction.TransactionDefinition",
    "member": "Method io.micronaut.transaction.TransactionDefinition.getDontRollbackOn()",
    "reason": "Added default method"
  },
  {
    "type": "io.micronaut.transaction.TransactionDefinition",
    "member": "Method io.micronaut.transaction.TransactionDefinition.getRollbackOn()",
    "reason": "Added default method"
  },
  {
    "type": "io.micronaut.transaction.TransactionDefinition",
    "member": "Method io.micronaut.transaction.TransactionDefinition.rollbackOn(java.lang.Throwable)",
    "reason": "Added default method"
  },
  {
    "type": "io.micronaut.data.runtime.mapper.QueryStatement",
    "member": "Class io.micronaut.data.runtime.mapper.QueryStatement",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.runtime.mapper.QueryStatement",
    "member": "Method io.micronaut.data.runtime.mapper.QueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.time.Instant)",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
    "member": "Class io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
    "member": "Method io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement.setTimestamp(io.r2dbc.spi.Statement,java.lang.Integer,java.util.Date)",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
    "member": "Method io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.util.Date)",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
    "member": "Class io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
    "member": "Method io.micronaut.data.jdbc.mapper.JdbcQueryStatement.setTimestamp(java.sql.PreparedStatement,java.lang.Integer,java.util.Date)",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
    "member": "Method io.micronaut.data.jdbc.mapper.JdbcQueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.util.Date)",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Class io.micronaut.data.model.runtime.QueryParameterBinding",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getDataType()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getName()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getParameterBindingPath()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getParameterConverterClass()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getParameterIndex()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getPreviousPopulatedValueParameter()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getPropertyPath()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.getValue()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.isAutoPopulated()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.data.model.runtime.QueryParameterBinding",
    "member": "Method io.micronaut.data.model.runtime.QueryParameterBinding.isRequiresPreviousPopulatedValue()",
    "reason": "Added a default method"
  },
  {
    "type": "io.micronaut.transaction.TransactionDefinition",
    "member": "Method io.micronaut.transaction.TransactionDefinition.named(java.lang.String)",
    "reason": "Static method"
  },
  {
      "type": "io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher",
      "member": "Constructor io.micronaut.data.processor.visitors.finders.AbstractPrefixPatternMethodMatcher(java.lang.String[])",
      "reason": "Class is considered internal API"
  },
  {
      "type": "io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
      "member": "Class io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
      "reason": "Class is considered internal API"
  },
  {
      "type": "io.micronaut.data.processor.visitors.finders.SaveEntityMethodMatcher",
      "member": "Field PREFIXES",
      "reason": "Class is considered internal API"
  },
  {
      "type": "io.micronaut.data.runtime.mapper.QueryStatement",
      "member": "Class io.micronaut.data.runtime.mapper.QueryStatement",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.runtime.mapper.QueryStatement",
      "member": "Method io.micronaut.data.runtime.mapper.QueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.time.Instant)",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
      "member": "Class io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
      "member": "Method io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement.setTimestamp(io.r2dbc.spi.Statement,java.lang.Integer,java.util.Date)",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement",
      "member": "Method io.micronaut.data.r2dbc.mapper.R2dbcQueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.util.Date)",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
      "member": "Class io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
      "member": "Method io.micronaut.data.jdbc.mapper.JdbcQueryStatement.setTimestamp(java.sql.PreparedStatement,java.lang.Integer,java.util.Date)",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.jdbc.mapper.JdbcQueryStatement",
      "member": "Method io.micronaut.data.jdbc.mapper.JdbcQueryStatement.setTimestamp(java.lang.Object,java.lang.Object,java.util.Date)",
      "reason": "Added a default method"
  },
  {
      "type": "io.micronaut.data.model.jpa.criteria.IPredicate",
      "member": "Class io.micronaut.data.model.jpa.criteria.IPredicate",
      "reason": "Experimental class with a new default method"
  },
  {
      "type": "io.micronaut.data.model.jpa.criteria.IPredicate",
      "member": "Method io.micronaut.data.model.jpa.criteria.IPredicate.isComparable()",
      "reason": "Experimental class with a new default method"
  },
  {
      "type": "io.micronaut.data.model.jpa.criteria.PersistentPropertyPath",
      "member": "Class io.micronaut.data.model.jpa.criteria.PersistentPropertyPath",
      "reason": "Experimental class with a new default method"
  },
  {
      "type": "io.micronaut.data.model.jpa.criteria.PersistentPropertyPath",
      "member": "Method io.micronaut.data.model.jpa.criteria.PersistentPropertyPath.isComparable()",
      "reason": "Experimental class with a new default method"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Class io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Field NOT_CLAUSE",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Method io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder.formatEndsWith()",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Method io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder.formatStartsWith()",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Method io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder.formatStartsWithBeginning()",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder",
    "member": "Method io.micronaut.data.model.query.builder.AbstractSqlLikeQueryBuilder.formEndsWithEnd()",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.model.query.builder.sql.SqlQueryBuilder",
    "member": "Class io.micronaut.data.model.query.builder.sql.SqlQueryBuilder",
    "reason": "Internal"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoPreparedQuery",
    "member": "Class io.micronaut.data.mongodb.operations.MongoPreparedQuery",
    "reason": "Experimental"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoPreparedQuery",
    "member": "Method io.micronaut.data.mongodb.operations.MongoPreparedQuery.getRuntimePersistentEntity()",
    "reason": "Experimental"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoStoredQuery",
    "member": "Class io.micronaut.data.mongodb.operations.MongoStoredQuery",
    "reason": "Experimental"
  },
  {
    "type": "io.micronaut.data.mongodb.operations.MongoStoredQuery",
    "member": "Method io.micronaut.data.mongodb.operations.MongoStoredQuery.getRuntimePersistentEntity()",
    "reason": "Experimental"
  },
  {
    "type": "io.micronaut.data.model.query.builder.QueryResult",
    "member": "Class io.micronaut.data.model.query.builder.QueryResult",
    "reason": "QueryResult needs to return joins so we can use it to override in the annotation if needed"
  },
  {
    "type": "io.micronaut.data.model.query.builder.QueryResult",
    "member": "Method io.micronaut.data.model.query.builder.QueryResult.getJoinPaths()",
    "reason": "QueryResult needs to return joins so we can use it to override in the annotation if needed"
  },
  {
    "type": "io.micronaut.data.model.query.builder.QueryResult",
    "member": "Method io.micronaut.data.model.query.builder.QueryResult.of(java.lang.String,java.util.List,java.util.List,java.util.Map,int,long,java.util.Collection)",
    "reason": "QueryResult needs to return joins so we can use it to override in the annotation if needed"
  },
  {
    "type": "io.micronaut.data.intercept.$DataIntroductionAdvice$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class moved"
  },
  {
    "type": "io.micronaut.data.intercept.$DataIntroductionAdvice$Definition$Reference",
    "member": "Constructor io.micronaut.data.intercept.$DataIntroductionAdvice$Definition$Reference()",
    "reason": "Internal class moved"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoFactory$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$NamedMongoDatabaseFactory1$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$NamedMongoDatabaseFactory1$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoFactory$NamedMongoDatabaseFactory1$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoFactory$PrimaryMongoDatabaseFactory0$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$NamedMongoDatabaseFactory1$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$NamedMongoDatabaseFactory1$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoReactiveFactory$NamedMongoDatabaseFactory1$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$PrimaryMongoDatabaseFactory0$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoReactiveFactory$PrimaryMongoDatabaseFactory0$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$SyncOperations2$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.$MongoReactiveFactory$SyncOperations2$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.database.$MongoReactiveFactory$SyncOperations2$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.SimpleMongoDatabaseFactory",
    "member": "Constructor io.micronaut.data.mongodb.database.SimpleMongoDatabaseFactory(com.mongodb.client.MongoClient,java.lang.String)",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.SimpleMongoDatabaseFactory",
    "member": "Implemented interface io.micronaut.data.mongodb.database.MongoDatabaseFactory",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.SimpleReactiveMongoDatabaseFactory",
    "member": "Constructor io.micronaut.data.mongodb.database.SimpleReactiveMongoDatabaseFactory(com.mongodb.reactivestreams.client.MongoClient,java.lang.String)",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.SimpleReactiveMongoDatabaseFactory",
    "member": "Implemented interface io.micronaut.data.mongodb.database.ReactiveMongoDatabaseFactory",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.UnknownMongoDatabaseFactory",
    "member": "Constructor io.micronaut.data.mongodb.database.UnknownMongoDatabaseFactory()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.UnknownMongoDatabaseFactory",
    "member": "Implemented interface io.micronaut.data.mongodb.database.MongoDatabaseFactory",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.UnknownReactiveMongoDatabaseFactory",
    "member": "Constructor io.micronaut.data.mongodb.database.UnknownReactiveMongoDatabaseFactory()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.database.UnknownReactiveMongoDatabaseFactory",
    "member": "Implemented interface io.micronaut.data.mongodb.database.ReactiveMongoDatabaseFactory",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.transaction.$MongoSynchronousTransactionManager$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.mongodb.transaction.$MongoSynchronousTransactionManager$Definition$Reference",
    "member": "Constructor io.micronaut.data.mongodb.transaction.$MongoSynchronousTransactionManager$Definition$Reference()",
    "reason": "Internal class removed"
  },
  {
    "type": "io.micronaut.data.r2dbc.config.DataR2dbcConfiguration",
    "member": "Constructor io.micronaut.data.r2dbc.config.DataR2dbcConfiguration(java.lang.String,io.r2dbc.spi.ConnectionFactory,io.micronaut.data.r2dbc.operations.R2dbcOperations)",
    "reason": "Constructor changed"
  },
  {
    "type": "io.micronaut.data.annotation.TypeRole",
    "member": "Field LAST_UPDATED_PROPERTY",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.model.query.builder.QueryBuilder",
    "member": "Field IN_VARIABLES_PATTERN",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.model.runtime.DefaultStoredDataOperation",
    "member": "Field NO_TRANSACTION",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.hibernate.operations.HibernateJpaOperations",
    "member": "Constructor io.micronaut.data.hibernate.operations.HibernateJpaOperations(org.hibernate.SessionFactory,io.micronaut.transaction.TransactionOperations,java.util.concurrent.ExecutorService,io.micronaut.data.model.runtime.RuntimeEntityRegistry)",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.jdbc.mapper.ColumnIndexResultSetReader",
    "member": "Constructor io.micronaut.data.jdbc.mapper.ColumnIndexResultSetReader()",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.runtime.operations.ExecutorReactiveOperations",
    "member": "Constructor io.micronaut.data.runtime.operations.ExecutorReactiveOperations(io.micronaut.data.operations.RepositoryOperations,java.util.concurrent.Executor)",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.runtime.operations.ExecutorReactiveOperations",
    "member": "Constructor io.micronaut.data.runtime.operations.ExecutorReactiveOperations(io.micronaut.data.runtime.operations.ExecutorAsyncOperations)",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.interceptor.DefaultTransactionAttribute",
    "member": "Constructor io.micronaut.transaction.interceptor.DefaultTransactionAttribute()",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.interceptor.DefaultTransactionAttribute",
    "member": "Implemented interface io.micronaut.transaction.TransactionDefinition",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.interceptor.DefaultTransactionAttribute",
    "member": "Implemented interface io.micronaut.transaction.interceptor.TransactionAttribute",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.interceptor.DefaultTransactionAttribute",
    "member": "Implemented interface java.io.Serializable",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.interceptor.TransactionAttribute",
    "member": "Implemented interface io.micronaut.transaction.TransactionDefinition",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.support.DefaultTransactionDefinition",
    "member": "Field PREFIX_TIMEOUT",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.support.DefaultTransactionDefinition",
    "member": "Field READ_ONLY_MARKER",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.support.DefaultTransactionDefinition",
    "member": "Field PREFIX_PROPAGATION",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.transaction.support.DefaultTransactionDefinition",
    "member": "Field PREFIX_ISOLATION",
    "reason": "Removed deprecated members for Micronaut 4"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Provide a human readable reason for the change\""
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultCustomConverterSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdPropertyNamingStrategy$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultIdSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations",
    "member": "Constructor io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations(java.util.List,io.micronaut.data.runtime.date.DateTimeProvider,io.micronaut.data.model.runtime.RuntimeEntityRegistry,io.micronaut.data.runtime.convert.DataConversionService,io.micronaut.data.model.runtime.AttributeConverterRegistry,com.azure.cosmos.CosmosAsyncClient,io.micronaut.data.cosmos.operations.CosmosSerde,io.micronaut.data.cosmos.operations.CosmosDiagnosticsProcessor,io.micronaut.data.cosmos.config.CosmosDatabaseConfiguration)",
    "reason": "Constructor has been changed"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultManyRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationDeserializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Field $ANNOTATION_METADATA",
    "reason": "Field type has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Constructor io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference()",
    "reason": "Super constructor param type(s) have been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationSource",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanContextConditional",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.core.annotation.AnnotationMetadataProvider",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanType",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.cosmos.serde.$DefaultOneRelationSerializer$Definition$Reference",
    "member": "Implemented interface io.micronaut.inject.BeanDefinitionReference",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.EmbeddableMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.TypedAnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.EmbeddableMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.AnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedEntityMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.TypedAnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedEntityMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.AnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedIdMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.TypedAnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedIdMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.AnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedPropertyMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.TypedAnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedPropertyMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.AnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedRelationMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.TypedAnnotationMapper",
    "reason": "Implemented interface has been moved"
  },
  {
    "type": "io.micronaut.data.document.processor.mapper.MappedRelationMapper",
    "member": "Implemented interface io.micronaut.inject.annotation.AnnotationMapper",
    "reason": "Implemented interface has been moved"
  }
]
