import io.micronaut.testresources.buildtools.KnownModules

plugins {
    id "io.micronaut.build.internal.data-module"
    id 'io.micronaut.test-resources'
}

dependencies {
    annotationProcessor mn.micronaut.inject.java
    annotationProcessor mn.micronaut.graal
    annotationProcessor libs.micronaut.docs

    api projects.micronautDataConnection
    api projects.micronautDataRuntime
    implementation mnSql.micronaut.jdbc
    implementation mn.micronaut.aop

    testAnnotationProcessor mn.micronaut.inject.java

    testImplementation projects.micronautDataRuntime
    testImplementation projects.micronautDataTck

    testImplementation mnReactor.micronaut.reactor

    testImplementation(mnTestResources.testcontainers.postgres)

    testCompileOnly mn.micronaut.inject.groovy

    testImplementation mn.micronaut.http.netty
    testRuntimeOnly mnSql.micronaut.jdbc.tomcat
    testRuntimeOnly mnSql.h2
    testRuntimeOnly mnSql.postgresql
    testRuntimeOnly mn.snakeyaml

    testResourcesService mnSql.postgresql
    testImplementation libs.micronaut.testresources.client
}

micronaut {
    version libs.versions.micronaut.platform.get()
    testResources {
        enabled = true
        inferClasspath = false
        additionalModules.add(KnownModules.JDBC_POSTGRESQL)
        clientTimeout = 300
        version = libs.versions.micronaut.testresources.get()
    }
}

tasks.withType(Test).configureEach {
    jvmArgs '-Xmx1024m'
    systemProperty "oracle.jdbc.timezoneAsRegion", "false"
}
