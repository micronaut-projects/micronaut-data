import io.micronaut.testresources.buildtools.KnownModules

plugins {
    id "io.micronaut.build.internal.data-module"
    id "io.micronaut.test-resources"
}

dependencies {
    annotationProcessor mn.micronaut.inject.java
    annotationProcessor mn.micronaut.graal

    api projects.micronautDataHibernateJpa
    api (mnSql.micronaut.hibernate.reactive) {
        exclude group: 'io.smallrye.reactive', module: 'mutiny'
    }

    implementation mnReactor.micronaut.reactor

    testAnnotationProcessor mn.micronaut.inject.java
    testAnnotationProcessor projects.micronautDataProcessor

    testImplementation mn.micronaut.inject.groovy
    testImplementation projects.micronautDataProcessor
    testImplementation mnRxjava2.micronaut.rxjava2
    testImplementation mnReactor.micronaut.reactor
    testImplementation projects.micronautDataTck
    testImplementation libs.groovy.sql

    testRuntimeOnly mnSql.vertx.pg.client
    testRuntimeOnly mnSql.vertx.mysql.client

    // Needed for test resources
    testResourcesService mnSql.mysql.connector.java
    testResourcesService mnSql.postgresql

    // See https://github.com/eclipse-vertx/vertx-sql-client/issues/1059
    testRuntimeOnly "com.ongres.scram:client:2.1"
}

micronaut {
    version libs.versions.micronaut.platform.get()
    testResources {
        enabled = true
        inferClasspath = false
        additionalModules.add(KnownModules.HIBERNATE_REACTIVE_MYSQL)
        additionalModules.add(KnownModules.HIBERNATE_REACTIVE_POSTGRESQL)
        clientTimeout = 300
        version = libs.versions.micronaut.testresources.get()
    }
}
