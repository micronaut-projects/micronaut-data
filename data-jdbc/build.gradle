dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    api project(":data-runtime")
    compileOnly 'io.micronaut.rxjava2:micronaut-rxjava2'
    implementation "io.micronaut:micronaut-http"
    implementation "io.micronaut.sql:micronaut-jdbc"
    compileOnly project(":data-hibernate-jpa")
    testImplementation project(":data-tck")

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testAnnotationProcessor project(":data-processor")
    testCompileOnly "io.micronaut:micronaut-inject-groovy"
    testImplementation project(":data-processor")
    testImplementation 'io.micronaut.rxjava2:micronaut-rxjava2'
    testImplementation "com.fasterxml.jackson.core:jackson-databind"
	testImplementation "javax.persistence:javax.persistence-api:$javaxPersistenceVersion"
    testImplementation "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceVersion"
    testImplementation "org.codehaus.groovy:groovy-sql:$groovyVersion"
    testImplementation "io.micronaut:micronaut-validation"
    testImplementation "org.testcontainers:spock"
    testImplementation "org.testcontainers:mysql"
    testImplementation "org.testcontainers:mariadb"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:mssqlserver"
    testImplementation "org.testcontainers:oracle-xe"
    testRuntimeOnly "com.h2database:h2:1.4.200"
    testRuntimeOnly "io.micronaut.sql:micronaut-jdbc-tomcat"
    testRuntimeOnly "org.mariadb.jdbc:mariadb-java-client:$mariadbDriverVersion"
    testRuntimeOnly "com.oracle.database.jdbc:ojdbc8:$oracleDriverVersion"
    testRuntimeOnly "mysql:mysql-connector-java:$mysqlDriverVersion"
    testRuntimeOnly "org.postgresql:postgresql:$postgresDriverVersion"
    testRuntimeOnly "com.microsoft.sqlserver:mssql-jdbc:$mssqlDriverVersion"
}

test {
    systemProperty "oracle.jdbc.timezoneAsRegion", "false"
}

micronautBuild {
    resolutionStrategy {
        componentSelection {
            all { selection ->
                if (selection.candidate.module == 'mssql-jdbc' && !selection.candidate.version.contains("jre8")) {
                    selection.reject("Not a JDK8 compatible MS SQL driver")
                }
            }
        }
    }
}

//compileTestJava.options.fork = true
//compileTestJava.options.forkOptions.jvmArgs = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005']
