CREATE TABLE "TEACHER" ("ID" NUMBER(19) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL PRIMARY KEY,"NAME" VARCHAR(255) NOT NULL);
CREATE TABLE "STUDENT" ("ID" NUMBER(19) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL PRIMARY KEY,"NAME" VARCHAR(255) NOT NULL);
CREATE TABLE "CLASS" ("ID" NUMBER(19) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL PRIMARY KEY,"NAME" VARCHAR(255) NOT NULL,"ROOM" VARCHAR(255) NOT NULL,"TIME" TIMESTAMP NOT NULL,"TEACHER_ID" NUMBER(19) NOT NULL);
CREATE TABLE "STUDENT_CLASSES" ("ID" NUMBER(19) GENERATED BY DEFAULT ON NULL AS IDENTITY NOT NULL PRIMARY KEY, "STUDENT_ID" NUMBER(19) NOT NULL,"CLASS_ID" NUMBER(19) NOT NULL);

ALTER TABLE "CLASS"
    ADD CONSTRAINT fk_teacher FOREIGN KEY("TEACHER_ID")
        REFERENCES "TEACHER"("ID");

ALTER TABLE "STUDENT_CLASSES"
    ADD CONSTRAINT fk_student FOREIGN KEY("STUDENT_ID")
        REFERENCES "STUDENT"("ID");

ALTER TABLE "STUDENT_CLASSES"
    ADD CONSTRAINT fk_class FOREIGN KEY("CLASS_ID")
        REFERENCES "CLASS"("ID");

CREATE OR REPLACE JSON RELATIONAL DUALITY VIEW STUDENT_SCHEDULE AS
SELECT JSON{'id': STUDENT.id,
            'name': STUDENT.name WITH UPDATE,
            'schedule': [SELECT JSON{'id': STUDENT_CLASSES.id,
                                     'class': (SELECT JSON{'classID': CLASS.id,
                                                           'teacher': (SELECT JSON{'teachID': TEACHER.id,
                                                                                    'teacher': TEACHER.name
                                                                                  } FROM TEACHER WITH UPDATE WHERE CLASS.teacher_id = TEACHER.id
                                                                        ),
                                                           'room': CLASS.room,
                                                           'time': CLASS.time,
                                                           'name': CLASS.name WITH UPDATE
                                                           } FROM CLASS WITH UPDATE WHERE STUDENT_CLASSES.class_id = CLASS.id
                                               )
                                    } FROM STUDENT_CLASSES WITH INSERT UPDATE DELETE WHERE STUDENT.id = STUDENT_CLASSES.student_id
                        ]
            } FROM STUDENT WITH UPDATE INSERT DELETE;

/*
CREATE OR REPLACE JSON DUALITY VIEW STUDENT_SCHEDULE AS
SELECT JSON{'name'  : s.name WITH UPDATE,
    'id': s.id,
    'schedule': [SELECT JSON {'class': (SELECT JSON{
                                                    'name': c.name,
                                                    'classID': c.id,
                                                    'time': c.time WITH UPDATE,
                                                    'room': c.room,
                                                    'teacher': (SELECT JSON{'teachID': t.id, 'teacher': t.name} FROM teacher t WHERE t.id = c.teacher_id)
                                                } FROM class c WITH UPDATE WHERE c.id = ssch.class_id),
                                      'id': ssch.id
                                      } FROM student_classes ssch WITH INSERT DELETE WHERE ssch.student_id = s.id]
            } FROM student s WITH INSERT UPDATE DELETE;
*/
