import io.micronaut.testresources.buildtools.KnownModules

plugins {
    id "org.jetbrains.kotlin.plugin.jpa"
    id "io.micronaut.build.internal.data-kotlin-example"
    id "io.micronaut.test-resources"
}

application {
    mainClass = "example.ApplicationKt"
}

micronaut {
    version libs.versions.micronaut.platform.get()
    runtime "netty"
    testRuntime "junit5"
    testResources {
        enabled = true
        inferClasspath = false
        additionalModules.add(KnownModules.HIBERNATE_REACTIVE_POSTGRESQL)
        clientTimeout = 300
        version = libs.versions.micronaut.testresources.get()
    }
}

dependencies {
    kapt mnValidation.micronaut.validation
    kapt projects.micronautDataProcessor

    implementation libs.kotlin.coroutines
    implementation libs.kotlin.coroutines.reactive
    implementation libs.kotlin.coroutines.reactor
    implementation mn.micronaut.http.client
    implementation projects.micronautDataHibernateReactive
    implementation mnReactor.micronaut.reactor
    implementation mnKotlin.micronaut.kotlin.runtime

    runtimeOnly mnLogging.logback.classic
    runtimeOnly mnSql.vertx.pg.client

    testResourcesService mnSql.postgresql
    // See https://github.com/eclipse-vertx/vertx-sql-client/issues/1059
    testRuntimeOnly "com.ongres.scram:client:2.1"
}
