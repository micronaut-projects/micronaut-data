plugins {
    id "application"
}

version "0.1"
group "example"

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor project(":data-processor")
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    implementation project(":data-jdbc")
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut.sql:micronaut-jdbc-tomcat:$micronautSqlVersion"
    compileOnly "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceVersion}"
    implementation "jakarta.transaction:jakarta.transaction-api:${jakartaTxVersion}"
    implementation "io.micronaut:micronaut-http-server-netty"
    runtimeOnly "ch.qos.logback:logback-classic"
    runtimeOnly "com.h2database:h2"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "io.micronaut.test:micronaut-test-junit5:$micronautTestVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}


mainClassName = "example.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
tasks.withType(JavaCompile){
    targetCompatibility("15")
    sourceCompatibility("15")
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
    options.compilerArgs.add("--enable-preview")
}
