plugins {
    id "java"
    id "io.micronaut.build.internal.data-example"
    id "io.micronaut.application"
    id 'io.micronaut.test-resources'
}

application {
    mainClass = "example.Application"
}

micronaut {
    version libs.versions.micronaut.asProvider().get()
    runtime "netty"
    testRuntime "junit5"
    testResources {
        clientTimeout = 300
        version = libs.versions.micronaut.testresources.get()
    }
}

dependencies {
    implementation mnMultitenancy.micronaut.multitenancy
    annotationProcessor projects.dataDocumentProcessor

    implementation 'io.micronaut.reactor:micronaut-reactor'
    implementation 'io.micronaut:micronaut-http-client'
    implementation 'io.micronaut.data:micronaut-data-jdbc'
    implementation mnSerde.micronaut.serde.jackson

    implementation libs.jakarta.persistence.api
    implementation libs.jakarta.transaction.api

    runtimeOnly "io.micronaut.sql:micronaut-jdbc-tomcat"
    runtimeOnly "com.h2database:h2"

    testImplementation "io.micronaut:micronaut-http-client"

    runtimeOnly "ch.qos.logback:logback-classic"
}
