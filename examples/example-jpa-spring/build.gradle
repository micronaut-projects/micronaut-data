plugins {
    id "java"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "org.springframework.boot" version "2.2.0.RELEASE"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
}

version "0.1"
group "example.jpa"

repositories {
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

ext {
    micronautDataVersion = "1.0.0"
    micronautVersion = "1.2.9"
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:micronaut-bom:$micronautVersion"
    }
}
dependencies {
    annotationProcessor "io.micronaut.spring:micronaut-spring-boot-annotation"
    annotationProcessor "io.micronaut.spring:micronaut-spring-web-annotation"        
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-graal"
    annotationProcessor "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"

    compileOnly "com.oracle.substratevm:svm"
    compile("org.springframework.boot:spring-boot-starter-web")
    implementation "io.micronaut:micronaut-inject"
    implementation "io.micronaut:micronaut-validation"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "jakarta.persistence:jakarta.persistence-api:2.2.2"
    implementation "io.micronaut.data:micronaut-data-spring-jpa:$micronautDataVersion"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.h2database:h2"
    runtime "io.micronaut.sql:micronaut-jdbc-tomcat:$micronautSqlVersion"
    runtime("io.micronaut.spring:micronaut-spring-web")

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testCompile "io.micronaut.test:micronaut-test-junit5:$micronautTestVersion"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.junit.platform:junit-platform-engine:1.5.0"
    testRuntime "org.junit.platform:junit-platform-commons:1.5.0"
}

test.classpath += configurations.developmentOnly

// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}
