[versions]
micronaut = "4.5.3"
micronaut-platform = "4.4.2"
micronaut-docs = "2.0.0"
micronaut-gradle-plugin = "4.4.0"
micronaut-testresources = "2.5.2"

micronaut-azure = "5.4.0"
micronaut-reactor = "3.3.0"
micronaut-rxjava2 = "2.3.0"
micronaut-r2dbc = "5.4.0"
micronaut-serde = "2.9.0"
micronaut-sql = "5.6.0"
micronaut-spring = "5.6.0"
micronaut-test = "4.3.0"
micronaut-mongo = "5.3.0"
micronaut-kotlin = "4.3.0"
micronaut-multitenancy = "5.3.0"
micronaut-validation = "4.5.0"
micronaut-logging = "1.3.0"
micronaut-flyway = "7.2.0"

groovy = "4.0.21"

managed-javax-persistence = "2.2"
managed-jakarta-persistence-api = "3.1.0"
managed-jakarta-transaction-api = "2.0.1"

spring-data = "3.3.1"

# Testing and benchmarking

benchmark-spring-data = "2024.0.1"
spock = "2.2-groovy-4.0"
testcontainers = "1.19.4"
jmh = "1.37"

# Gradle plugins

ksp-gradle-plugin = "1.9.23-1.0.20"
kotlin-gradle-plugin = "1.9.23"
jmh-gradle-plugin = "0.7.2"
spring-boot-gradle-plugin = "3.3.0"
spring-dependency-management-gradle-plugin = "1.1.5"
shadow-gradle-plugin = "8.0.0"

# Dependency versions which are found in the platform BOM
# meaning that they should be extracted into their own BOM
kotlin-coroutines = "1.8.1"


[libraries]
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }

micronaut-testresources-client = { module = 'io.micronaut.testresources:micronaut-test-resources-client', version.ref = "micronaut-testresources" }
micronaut-testresources-extensions-junit-platform = { module = 'io.micronaut.testresources:micronaut-test-resources-extensions-junit-platform', version.ref = "micronaut-testresources" }

# BOMs

micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor-bom', version.ref = "micronaut-reactor" }
micronaut-rxjava2 = { module = 'io.micronaut.rxjava2:micronaut-rxjava2-bom', version.ref = "micronaut-rxjava2" }
micronaut-kotlin = { module = 'io.micronaut.kotlin:micronaut-kotlin-bom', version.ref = "micronaut-kotlin" }
micronaut-multitenancy = { module = 'io.micronaut.multitenancy:micronaut-multitenancy-bom', version.ref = "micronaut-multitenancy" }
micronaut-testresources = { module = 'io.micronaut.testresources:micronaut-test-resources-bom', version.ref = "micronaut-testresources" }
micronaut-validation = { module = 'io.micronaut.validation:micronaut-validation-bom', version.ref = "micronaut-validation" }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }
micronaut-mongo = { module = "io.micronaut.mongodb:micronaut-mongo-bom", version.ref = "micronaut-mongo" }
micronaut-spring = { module = "io.micronaut.spring:micronaut-spring-bom", version.ref = "micronaut-spring" }
micronaut-sql = { module = "io.micronaut.sql:micronaut-sql-bom", version.ref = "micronaut-sql" }
micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-bom", version.ref = "micronaut-r2dbc" }
micronaut-flyway = { module = "io.micronaut.flyway:micronaut-flyway-bom", version.ref = "micronaut-flyway" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }

micronaut-docs = { module = "io.micronaut.docs:micronaut-docs-asciidoc-config-props", version.ref = "micronaut-docs" }

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlin-coroutines" }
kotlin-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlin-coroutines" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }

managed-jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "managed-jakarta-transaction-api" }

managed-javax-persistence-api = { module = "javax.persistence:javax.persistence-api", version.ref = "managed-javax-persistence" }
managed-jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "managed-jakarta-persistence-api" }

# JPA

spring-data-jpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-data" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-data" }

# AZURE COSMOS

micronaut-azure-cosmos = { module = "io.micronaut.azure:micronaut-azure-cosmos", version.ref = "micronaut-azure" }

# Test

jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine' }
jupiter-api = { module = 'org.junit.jupiter:junit-jupiter-api' }
groovy-sql = { module = "org.apache.groovy:groovy-sql" }
groovy-dateutil = { module = "org.apache.groovy:groovy-dateutil", version.ref = "groovy" }

# Benchmark

jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

benchmark-spring-data-bom = { module = "org.springframework.data:spring-data-bom", version.ref = "benchmark-spring-data" }

# TESTCONTAINERS

testcontainers-azure = { module = "org.testcontainers:azure" }

# PLUGINS

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin-gradle-plugin" }
gradle-ksp = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp-gradle-plugin" }
gradle-jmh = { module = "me.champeau.jmh:jmh-gradle-plugin", version.ref = "jmh-gradle-plugin" }
gradle-spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot-gradle-plugin" }
gradle-spring-dependencies = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management-gradle-plugin" }
gradle-shadow = { module = "gradle.plugin.com.github.johnrengelman:shadow", version.ref = "shadow-gradle-plugin" }
