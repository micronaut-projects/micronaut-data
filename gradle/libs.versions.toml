[versions]
micronaut = "3.7.4"
micronaut-test = "3.8.0"
micronaut-serde = "1.3.3"
micronaut-sql = "4.7.2"
micronaut-docs = "2.0.0"
micronaut-gradle-plugin = "3.6.5"
micronaut-mongo = "4.6.0"
micronaut-azure = "4.0.0"

groovy = "3.0.13"

javax-persistence = "2.2"
jakarta-persistence = "3.0.0"
jakarta-javax-persistence = "2.2.3"
javax-transaction = "1.3"
jakarta-transaction = "2.0.1"

hibernate = "5.6.14.Final"

spring-data = "2.7.6"
spring = "5.3.24"

mongodb = "4.7.2"

vertx = "4.3.6"

# JDBC Drivers

oracle-jdbc-driver = "21.8.0.0"
mariadb-jdbc-driver = "3.1.0"
mysql-jdbc-driver = "8.0.31"
postgres-jdbc-driver = "42.5.1"
mssql-jdbc-driver = "8.4.1.jre14"

# R2DBC Drivers

r2dbc = "1.0.0.RELEASE"
r2dbc-pool = "1.0.0.RELEASE"

oracle-r2dbc-driver = "1.1.0"
mysql-r2dbc-driver = "0.8.2.RELEASE"
h2-r2dbc-driver = "1.0.0.RELEASE"
mariadb-r2dbc-driver = "1.1.2"
postgresql-r2dbc-driver = "1.0.0.RELEASE"
mssql-r2dbc-driver = "1.0.0.RELEASE"

h2 = "2.1.214"

# Testing and benchmarking

benchmark-spring-data-mongodb = "4.4.2"
benchmark-spring-data = "2021.2.6"
spock = "2.0-groovy-3.0"
cglib = "3.3.0"
objenesis = "3.3"
testcontainers = "1.17.6"
jmh = "1.36"
jetbrains-annotations = "23.1.0"

# Gradle plugins

kotlin-gradle-plugin = "1.7.22"
jmh-gradle-plugin = "0.6.8"
spring-boot-gradle-plugin = "2.6.7"
spring-dependency-management-gradle-plugin = "1.1.0"
shadow-gradle-plugin = "7.1.2"

[libraries]

reactor = { module = 'io.projectreactor:reactor-core' }
rxjava2 = { module = 'io.reactivex.rxjava2:rxjava' }

micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor' }
micronaut-rxjava2 = { module = 'io.micronaut.rxjava2:micronaut-rxjava2' }

groovy-sql = { module = "org.codehaus.groovy:groovy-sql" }
groovy-dateutil = { module = "org.codehaus.groovy:groovy-dateutil", version.ref = "groovy" }

cglib = { module = "cglib:cglib-nodep", version.ref = "cglib" }
objenesis = { module = "org.objenesis:objenesis", version.ref = "objenesis" }

micronaut-docs = { module = "io.micronaut.docs:micronaut-docs-asciidoc-config-props", version.ref = "micronaut-docs" }

jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core" }

javax-transaction-api = { module = "javax.transaction:javax.transaction-api", version.ref = "javax-transaction" }
jakarta-transaction-api = { module = "jakarta.transaction:jakarta.transaction-api", version.ref = "jakarta-transaction" }

javax-persistence-api = { module = "javax.persistence:javax.persistence-api", version.ref = "javax-persistence" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-persistence" }
jakarta-persistence-api2 = { module = "jakarta.persistence:jakarta.persistence-api", version.ref = "jakarta-javax-persistence" }

jmh-core = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }

benchmark-spring-data-bom = { module = "org.springframework.data:spring-data-bom", version.ref = "benchmark-spring-data" }
benchmark-spring-data-mongodb-driver-core = { module = "org.mongodb:mongodb-driver-core", version.ref = "benchmark-spring-data-mongodb" }
benchmark-spring-data-mongodb-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version.ref = "benchmark-spring-data-mongodb" }

jetbrains-annotations = { module = "org.jetbrains:annotations", version.ref = "jetbrains-annotations" }

# Test

micronaut-test-core = { module = "io.micronaut.test:micronaut-test-core", version.ref = "micronaut-test" }
micronaut-test-spock = { module = "io.micronaut.test:micronaut-test-spock", version.ref = "micronaut-test" }

jupiter-engine = { module = 'org.junit.jupiter:junit-jupiter-engine' }

# JPA

micronaut-sql-hibernate-jpa = { module = "io.micronaut.sql:micronaut-hibernate-jpa", version.ref = "micronaut-sql" }
micronaut-sql-hibernate-reactive = { module = "io.micronaut.sql:micronaut-hibernate-reactive", version.ref = "micronaut-sql" }
micronaut-sql-hibernate-jpa-spring = { module = "io.micronaut.sql:micronaut-hibernate-jpa-spring", version.ref = "micronaut-sql" }

hibernate-core = { module = "org.hibernate:hibernate-core", version.ref = "hibernate" }
hibernate-jpamodelgen = { module = "org.hibernate:hibernate-jpamodelgen", version.ref = "hibernate" }
hibernate-jpamodelgen-jakarta = { module = "org.hibernate:hibernate-jpamodelgen-jakarta", version.ref = "hibernate" }

spring-data-jpa = { module = "org.springframework.data:spring-data-jpa", version.ref = "spring-data" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-data" }
spring-jdbc = { module = "org.springframework:spring-jdbc", version.ref = "spring" }
spring-orm = { module = "org.springframework:spring-orm", version.ref = "spring" }

# Vertx DB

vertx-core = { module = "io.vertx:vertx-core", version.ref = "vertx" }
drivers-vertx-pg = { module = "io.vertx:vertx-pg-client", version.ref = "vertx" }

# JDBC

micronaut-sql-jdbc-tomcat = { module = "io.micronaut.sql:micronaut-jdbc-tomcat", version.ref = "micronaut-sql" }
micronaut-sql-jdbc = { module = "io.micronaut.sql:micronaut-jdbc", version.ref = "micronaut-sql" }

h2 = { module = "com.h2database:h2", version.ref = "h2" }

drivers-jdbc-oracle = { module = "com.oracle.database.jdbc:ojdbc8", version.ref = "oracle-jdbc-driver" }
drivers-jdbc-mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb-jdbc-driver" }
drivers-jdbc-mysql = { module = "mysql:mysql-connector-java", version.ref = "mysql-jdbc-driver" }
drivers-jdbc-postgresql = { module = "org.postgresql:postgresql", version.ref = "postgres-jdbc-driver" }
drivers-jdbc-mssql = { module = "com.microsoft.sqlserver:mssql-jdbc", version.ref = "mssql-jdbc-driver" }

# R2DBC

r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version.ref = "r2dbc" }
r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "r2dbc-pool" }

micronaut-r2dbc = { module = "io.micronaut.r2dbc:micronaut-r2dbc-core" }

drivers-r2dbc-h2 = { module = "io.r2dbc:r2dbc-h2", version.ref = "h2-r2dbc-driver" }
drivers-r2dbc-oracle = { module = "com.oracle.database.r2dbc:oracle-r2dbc", version.ref = "oracle-r2dbc-driver" }
drivers-r2dbc-mariadb = { module = "org.mariadb:r2dbc-mariadb", version.ref = "mariadb-r2dbc-driver" }
drivers-r2dbc-mysql = { module = "dev.miku:r2dbc-mysql", version.ref = "mysql-r2dbc-driver" }
drivers-r2dbc-mssql = { module = "io.r2dbc:r2dbc-mssql", version.ref = "mssql-r2dbc-driver" }
drivers-r2dbc-postgresql = { module = "org.postgresql:r2dbc-postgresql", version.ref = "postgresql-r2dbc-driver" }

# TESTCONTAINERS

testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-spock = { module = "org.testcontainers:spock" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb" }
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver" }
testcontainers-oracle = { module = "org.testcontainers:oracle-xe" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc" }
testcontainers-mongodb = { module = "org.testcontainers:mongodb" }
testcontainers-azure = { module = "org.testcontainers:azure" }

# SERDE

micronaut-serde-processor = { module = "io.micronaut.serde:micronaut-serde-processor", version.ref = "micronaut-serde" }
micronaut-serde-bson = { module = "io.micronaut.serde:micronaut-serde-bson", version.ref = "micronaut-serde" }
micronaut-serde-jackson = { module = "io.micronaut.serde:micronaut-serde-jackson", version.ref = "micronaut-serde" }
micronaut-serde-api = { module = "io.micronaut.serde:micronaut-serde-api", version.ref = "micronaut-serde" }
micronaut-serde-support = { module = "io.micronaut.serde:micronaut-serde-support", version.ref = "micronaut-serde" }

# MONGO

mongodb-driver-core = { module = "org.mongodb:mongodb-driver-core", version.ref = "mongodb" }
mongodb-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongodb" }
mongodb-driver-reactive = { module = "org.mongodb:mongodb-driver-reactivestreams", version.ref = "mongodb" }

micronaut-mongo-reactive = { module = "io.micronaut.mongodb:micronaut-mongo-reactive", version.ref = "micronaut-mongo" }
micronaut-mongo-sync = { module = "io.micronaut.mongodb:micronaut-mongo-sync", version.ref = "micronaut-mongo" }

# AZURE COSMOS

micronaut-azure-cosmos = { module = "io.micronaut.azure:micronaut-azure-cosmos", version.ref = "micronaut-azure" }

# PLUGINS

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin-gradle-plugin" }
gradle-jmh = { module = "me.champeau.jmh:jmh-gradle-plugin", version.ref = "jmh-gradle-plugin" }
gradle-spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "spring-boot-gradle-plugin" }
gradle-spring-dependencies = { module = "io.spring.gradle:dependency-management-plugin", version.ref = "spring-dependency-management-gradle-plugin" }
gradle-shadow = { module = "gradle.plugin.com.github.johnrengelman:shadow", version.ref = "shadow-gradle-plugin" }
